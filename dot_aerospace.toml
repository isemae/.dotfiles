# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# Feel free to omit keys that you don't use in your config.
# If the key is absent in your config the default value is taken from this config

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
  # JankyBorders has a built-in detection of already running process,
  # sketchbar has a built-in detection of already running process,
  # so it won't be run twice on AeroSpace restart
  'exec-and-forget /usr/local/bin/borders width=5.0',
  'layout h_tiles',
  # Run Sketchybar together with AeroSpace
  # 'exec-and-forget /opt/homebrew/opt/sketchybar/bin/sketchybar'
]

# Start AeroSpace at login
start-at-login = false


# Notify Sketchybar about workspace change
exec-on-workspace-change = [
  '/bin/bash',
  '-c',
  # '/opt/homebrew/opt/sketchybar/bin/sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE'
]

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Visual indent makes it easier to understand that containers of the same orientation are nested.
# If you have 'enable-normalization-opposite-orientation-for-nested-containers' enabled then
# there is no way to observe the indent

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 10
inner.vertical = 8
outer.left = 10
outer.right = 10
outer.top = 10
outer.bottom = 12

# See https://nikitabobko.github.io/AeroSpace/guide#exec-env-vars
[exec]
inherit-env-vars = true
[exec.env-vars]
PATH = '/opt/homebrew/bin:/opt/homebrew/sbin:${PATH}'

[[on-window-detected]]
if.app-id = 'imagetasks.Pixea' # Application ID exact match
run = ['layout floating']
[[on-window-detected]]
if.app-id = 'com.colliderli.iina'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.Preview'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.finder'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'org.pqrs.Karabiner-Elements.Settings'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.drycactus.polybridge'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.hegenberg.BetterTouchTool'
run = ['layout floating']

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
[mode.main.binding]
ctrl-shift-c = 'reload-config'
cmd-h = []
# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# You can uncomment this line to open up terminal with alt + enter shortcut
# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# alt-enter = 'exec-and-forget open -n /System/Applications/Utilities/Terminal.app'

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-slash = 'layout tiles horizontal vertical'
alt-period = 'layout accordion horizontal vertical'
alt-comma = 'layout floating tiling'
ctrl-alt-enter = 'fullscreen'
# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-h = 'focus left'
alt-j = 'focus down'
alt-k = 'focus up'
alt-l = 'focus right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
ctrl-alt-h = 'move left'
ctrl-alt-j = 'move down'
ctrl-alt-k = 'move up'
ctrl-alt-l = 'move right'

# 'join' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
cmd-alt-shift-h = 'join-with left'
cmd-alt-shift-j = 'join-with down'
cmd-alt-shift-k = 'join-with up'
cmd-alt-shift-l = 'join-with right'

ctrl-alt-p = 'join-with up'
ctrl-alt-n = 'join-with down'
ctrl-alt-b = 'join-with left'
ctrl-alt-f = 'join-with right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
ctrl-alt-minus = 'resize smart -50'
ctrl-alt-equal = 'resize smart +50'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
cmd-1 = 'workspace 1'
cmd-2 = 'workspace 2'
cmd-3 = 'workspace 3'
cmd-4 = 'workspace 4'
cmd-5 = 'workspace 5'
cmd-6 = 'workspace 6'
cmd-7 = 'workspace 7'
cmd-8 = 'workspace 8'
cmd-9 = 'workspace 9'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
cmd-alt-1 = 'move-node-to-workspace 1'
cmd-alt-2 = 'move-node-to-workspace 2'
cmd-alt-3 = 'move-node-to-workspace 3'
cmd-alt-4 = 'move-node-to-workspace 4'
cmd-alt-5 = 'move-node-to-workspace 5'
cmd-alt-6 = 'move-node-to-workspace 6'
cmd-alt-7 = 'move-node-to-workspace 7'
cmd-alt-8 = 'move-node-to-workspace 8'
cmd-alt-9 = 'move-node-to-workspace 9'


# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-tab = 'workspace-back-and-forth'
cmd-alt-backtick = 'move-workspace-to-monitor --wrap-around next'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
ctrl-alt-x = [
  'move-node-to-monitor next',
  'focus-monitor next',
]
ctrl-alt-z = [
  'move-node-to-monitor prev ',
  'focus-monitor prev ',
]

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
ctrl-alt-semicolon = 'mode service'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
r = ['flatten-workspace-tree', 'mode main'] # reset layout
#s = ['layout sticky tiling', 'mode main'] # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
f = [
  'layout floating tiling',
  'mode main',
] # Toggle between floating and tiling layout
# backspace = ['close-all-windows-but-current', 'mode main']
esc = ['reload-config', 'mode main']
